// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FamilyMember {
  id        String   @id @default(cuid())
  name      String
  color     String   // hex like #FF0000
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  eventsCreated Event[] @relation("FamilyMemberToEvent")
  posts         Post[]
  todos         Todo[]

  participants EventParticipant[]
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  startsAt    DateTime
  endsAt      DateTime?
  allDay      Boolean     @default(false)
  location    String?

  // creator/owner of the event (optional)
  creator     FamilyMember? @relation("FamilyMemberToEvent", fields: [creatorId], references: [id])
  creatorId   String?

  participants EventParticipant[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EventParticipant {
  eventId  String
  memberId String

  event  Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)
  member FamilyMember @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@id([eventId, memberId])
}

model Post {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   FamilyMember? @relation(fields: [authorId], references: [id])
  authorId String?
}

model Todo {
  id          String   @id @default(cuid())
  title       String
  description String?
  done        Boolean  @default(false)
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner    FamilyMember? @relation(fields: [ownerId], references: [id])
  ownerId  String?
}
